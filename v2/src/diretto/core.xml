<?xml version="1.0" encoding="UTF-8"?>

<api xmlns="http://www.ioexception.de/rest-api-doc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.ioexception.de/rest-api-doc ../xsd/rest-api-doc.xsd ">
	<name>diretto Core API</name>
	<version>v2 - Draft</version>
	<author>Benjamin Erb</author>
	<description>The following document describe the RESTful API of the
		core services of the diretto platform. It is the only service mandatory for a deployment. 
		In most cases however (unless only using external documents), at least the Storage API will be needed as well.
		 </description>
	<baseuri>http://core.example.foo/v2</baseuri>
	<authentication>
		<type>Basic Authentication</type>
	</authentication>
	
	
	<resources>
	
	<!-- ============================================================================================================= 
			Index
	============================================================================================================== -->
		<resource>
			<name>Index</name>
			<description>This entry resource provides information about the instance.</description>
			<path></path>
			
			<operation>
				<name>Get service instance data</name>
				<description>Returns a static information about the deployed Core service instance.</description>
				<path />
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="false"/>
					<entities></entities>
				</request>
				<response>
					<responses>
						<answer code="200">Service instance data in response entity</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "api":{
      "name":"org.diretto.api.main.core",
      "version":"v2"
   },
   "service":{
      "name":"diretto Core API Node",
      "version":"0.2.0"
   },
   "deployment":{
      "title":"fubar diretto Deployment",
      "contact":"mail@deployer",
      "website":{
         "link":{
            "rel":"self",
            "href":"http://www.diretto.org"
         }
      }
   },
   "links":[
      {
         "title":"diretto Core API Documentation",
         "link":{
            "rel":"self",
            "href":"http://diretto.github.com/diretto-api-doc/v2/diretto/core.html"
         }
      }
   ]   
}]]></code>
						<description>The JSON response contains information about the service identification and version and the actual deployment variables.</description>
						</entity>
					</entities>
				</response>
			</operation>	
		</resource>		
		
	
	<!-- ============================================================================================================= 
			Service
	============================================================================================================== -->
		<resource>
			<name>Service</name>
			<description>A resource for service informations.</description>
			<path>/service</path>
			
			<operation>
				<name>Get supported media types</name>
				<description>Returns a list of supported media types that the deployment accepts as incoming documents. 
				Internal media types are supported to be stored within the platform using the Storage API. External media types
				are meta-data only entries that contain the link to the original source. Both types of media types can be 
				enabled or disabled. For both a wide range of MIME types can be configured during deployment.  				
				</description>
				<path >/mediatypes</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities></entities>
				</request>
				<response>
					<responses>
						<answer code="200">List in response entity</answer>
					</responses>
					<entities>
						<entity>
						<code language="js">
<![CDATA[{
   "mediatypes":{
      "internal":{
         "image/jpeg":{
            "type":"image",
            "extension":"jpg",
            "maxSize":5210880
         }
      },
      "external":{
         "video/x-diretto-youtube+url":{
            "type":"video",
            "name":"YouTube Video"
         }
      }
   }
}]]>						
						</code>
						<description>A sample configuration that allows only JPEG images to be stored on the platform itself.
						Images will be accepted as long as the file size does not exceed 5210880 byte. 
						Additionally, hyperlinks to YouTube videos will be accepted as well. Note that the corresponding content plugin
						will validate incoming external links, thus no further validation details are listed in this overview.</description>
						</entity>
					</entities>
				</response>
			</operation>

			<operation>
				<name>Get the service registry</name>
				<description>Returns a list of registered services of the platform. If there is a Registry API service available, this request will be redirected to the Registry API directory.</description>
				<path>/registry</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="false"/>
					<entities></entities>
				</request>
				<response>
					<responses>
						<answer code="200">List in response entity</answer>
						<answer code="303">Redirect to Registry API service</answer>
					</responses>
					<entities>
						<entity>
						<code language="js">
<![CDATA[{
   "services":{
      "list":[
         {
            "api":{
               "name":"org.diretto.api.external.task",
               "version":"v2"
            },
            "service":{
               "name":"diretto Task Node",
               "version":"0.1.0"
            },
            "deployment":{
               "title":"fubar Task Service",
               "contact":"n/a",
               "website":{
                  "link":{
                     "rel":"self",
                     "href":"http://www.diretto.org"
                  }
               }
            },
            "link":{
               "rel":"self",
               "href":"http://taskservice/v2"
            }
         }
      ]
   }
}]]>						
						</code>
						</entity>
					</entities>
				</response>
			</operation>	
			
			<operation>
				<name>Obtain a random UUID</name>
				<description>Returns a random UUID generated by the server. This UUID can be used once by the client, if it has no means
				to generate UUIDs on his own. The UUID is "guaranteed" not to be sent in other requests, as long as the world does not collapse (aka. random UUID collision). </description>
				<path>/uuid</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="false"/>
					<entities></entities>
				</request>
				<response>
					<responses>
						<answer code="200">UUID in response entity</answer>
					</responses>
					<entities>
						<entity>
						<code language="js">
<![CDATA[{
   "uuid": "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
}]]>						
						</code>
						<description>A single UUID is returned </description>
						</entity>
					</entities>
				</response>
			</operation>			
		</resource>	
		
	
	<!-- ============================================================================================================= 
			Tag
	============================================================================================================== -->
		<resource>
			<name>Tag</name>
			<description>This resource represents a tag. Users can append tags on various resources. 
			The tag URI path is appended to the original URI. The following resources of the Core API can be tagged: <it>Document</it> and <it>Link</it>
			
<code language="plain">
   Client                      Task Service

     |                               |
     |                               |
     |   (1) POST Tag                |
     |------------------------------>|
     |                               |
     |   (2) 201/202 + Location      |
     |&lt;------------------------------|
     |                               |
     |                               |
     |   (3) POST Tag to Resource    |
     |------------------------------>|
     |                               |
     |   (4) 201/202 + Location      |
     |&lt;------------------------------|
     |                               |
     |                               |
</code>				
		Steps 1+2 create a tag, steps 3+4 append the tag to a resource.</description>
			<path>/tag/<param description="tag ID">tag-id</param></path>
			
			<operation>
				<name>Create a new tag or resolve an existing tag</name>
				<description>Create a new tag that can be appended to resource thereafter. This API call can also be used to retrieve the internal ID of an existing tag.</description>
				<path omitResourcePath="true">/tags</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication mandatory="true" />
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "value":"mytag"
}]]></code>
						</entity>
					</entities>
				</request>
				<response>
					<responses>
						<answer code="201">Tag has been created. The location header contains its URI and thus also the tag id.</answer>						
						<answer code="202">Tag already exists, but accepted.</answer>						
						<answer code="400">Invalid tag data (i.e. length).</answer>						
					</responses>
					<entities >
<entity>
							<code language="js">
<![CDATA[{
   "baseTag":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
      }
   }
}]]></code>
						</entity>					
					</entities>										
				</response>
			</operation>	
					
			<operation>
				<name>Create or resolve multiple tags (batch request)</name>
				<description>Takes a list of textual tags and either creates or resolves each of them. For every single tag, either the base tag URI or an error message is returned.</description>
				<path omitResourcePath="true">/tags/multiple</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication mandatory="true" />
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "values":["t","mytag"]
}]]></code>
						</entity>
					</entities>
				</request>
				<response>
					<responses>
						<answer code="200">List of tags in response.</answer>						
					</responses>
					<entities >
<entity>
							<code language="js">
<![CDATA[{
   "results":{
      "mytag":{
         "baseTag":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
            }
         }
      },
      "t":{
         "error":{
            "message":"Invalid tag length"
         }
      }
   }
}]]></code>
						</entity>					
					</entities>										
				</response>
			</operation>
			
			<operation>
				<name>Retrieve a tag</name>
				<description>Returns a tag entry.</description>
				<path />
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200"></answer>
						<answer code="404">Tag not found.</answer>						
					</responses>
					<entities>					
						<entity>
							<code language="js">
<![CDATA[{
   "baseTag":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
      },
      "value":"mytag",
      "creationTime":"2010-07-17T18:54:11.939Z",
      "creator":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456"
         }
      }
   }
}]]></code>
							<description>Note that the creation time denotes the initial usage of this time.</description>
						</entity>
					</entities>					
				</response>
			</operation>				
						
			<operation>
				<name>Retrieve a single tag of a resource</name>
				<description>Returns a single tag entry that has been appended to a resource.</description>
				<path omitResourcePath="true">/<param description="resource identifier">resource</param>/tag/<param description="tag ID">tag-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200"></answer>
						<answer code="404">Resource not found.</answer>						
					</responses>
					<entities>					
						<entity>
							<code language="js">
<![CDATA[{
   "tag":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/2671f383-a28c-44d5-b86b-f7f04bb0a015/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
      },
      "baseTag" : {
	      "link":{
	         "rel":"self",
	         "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
	      }
      }, 
      "value":"mytag",
      "creationTime":"2010-07-17T18:54:11.939Z",
      "creator":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456"
         }
      },
      "votes":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/2671f383-a28c-44d5-b86b-f7f04bb0a015/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/votes"
         },
         "up":12,
         "down":2
      }
   }
}]]></code>
							<description>Note that the creation time denotes the time this tag has been appended to the resource for the first time.</description>
						</entity>
					</entities>					
				</response>
			</operation>
			
			<operation>
				<name>Append a tag to a resource</name>
				<description>Appends a new tag to the resource.</description>
				<path omitResourcePath="true">/<param description="resource">resource</param>/tags</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication mandatory="true" />
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "baseTag":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
      }
   }
}]]></code>
						</entity>
					</entities>
				</request>
				<response>
					<responses>
						<answer code="201">Tag has been appended. The location header contains its URI and thus also the tag id.</answer>						
						<answer code="202">Tag already exists, but accepted.</answer>						
						<answer code="400">Invalid tag data (i.e. ID mismatch).</answer>						
						<answer code="404">Tag or resource not found.</answer>						
					</responses>
					<entities />										
				</response>
			</operation>
			
			<operation>
				<name>Retrieve all tags of a resource</name>
				<description>Returns a single tag entry.</description>
				<path omitResourcePath="true">/<param description="resource">resource</param>/tags</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200"></answer>
						<answer code="404">Resource not found.</answer>						
					</responses>
					<entities>					
						<entity>
							<code language="js">
<![CDATA[{
   "tags":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/2671f383-a28c-44d5-b86b-f7f04bb0a015/tags"
      },
      "list":[
         {
            "tag":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/2671f383-a28c-44d5-b86b-f7f04bb0a015/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
               },
               "baseTag":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                  }
               },
               "value":"mytag",
               "creationTime":"2010-07-17T18:54:11.939Z",
               "creator":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/user/123456"
                  }
               },
               "votes":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/2671f383-a28c-44d5-b86b-f7f04bb0a015/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/votes"
                  },
                  "up":12,
                  "down":2
               }
            }
         }
      ]
   }
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>
			
			<operation>
				<name>List of all tags (forward)</name>
				<description>Forwards to a paginated list of all tags in this service.</description>
				<path omitResourcePath="true">/tags</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No results available yet.</answer>
						<answer code="303">Forward to first page.</answer>
					</responses>
					<entities />
				</response>
			</operation>	
						
			<operation>
				<name>List of all tags (page)</name>
				<description>Returns a page of the paginated list of all tags.</description>
				<path omitResourcePath="true">/tags/cursor/<param description="ID of tag used as cursor">tag-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Page in response.</answer>
						<answer code="404">Cursor/page not found</answer>
					</responses>
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "page":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/tags/cursor/ef7987f2bd22f4a8cf236c83a57c1f6b"
      }
   },
   "list":[
      {
         "baseTag":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
            },
            "value":"mytag",
            "creationTime":"2010-07-17T18:54:11.939Z",
            "creator":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/123456"
               }
            }
         }
      }
   ],
   "related":[
      {
         "link":{
            "rel":"previous",
            "href":"http://core.example.foo/v2/tags/cursor/90b419abac69dc67572e335a8c85a1cc"
         }
      },
      {
         "link":{
            "rel":"next",
            "href":"http://core.example.foo/v2/tags/cursor/585b716c0efb1b8c040830315e1c94e4"
         }
      }
   ]
}]]></code>
						</entity>
					</entities>
				</response>
			</operation>	
			
						
			<operation>
				<name>List of documents using a specific tag (forward)</name>
				<description>Forwards to a paginated list of all documents, where a given tag has been attached to.</description>
				<path omitResourcePath="false">/documents</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No documents available yet.</answer>
						<answer code="303">Forward to first page.</answer>
					</responses>
					<entities />
				</response>
			</operation>		
										
			<operation>
				<name>List of documents using a specific tag (page)</name>
				<description>Returns a page of the paginated list of all tags.</description>
				<path omitResourcePath="false">/documents/cursor/<param description="ID of document used as cursor">doc-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Page in response.</answer>
						<answer code="404">Cursor/page not found</answer>
					</responses>
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "page":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/documents/cursor/550e8400-e29b-11d4-a716-446655440000"
      }
   },
   "list":[
      {
         "document":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/550e8400-e29b-11d4-a716-446655440000"
            }
         }
      }
   ],
   "related":[
      {
         "link":{
            "rel":"previous",
            "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/documents/cursor/5330edf0-a68d-11e0-8264-0800200c9a66"
         }
      },
      {
         "link":{
            "rel":"next",
            "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/documents/cursor/8d45b5ff-c6b8-4ec3-9fd1-96704233be3e"
         }
      }
   ]
}]]></code>
						</entity>
					</entities>
				</response>
			</operation>	
		
			<operation>
				<name>List of links using a specific tag (forward)</name>
				<description>Forwards to a paginated list of all links, where a given tag has been attached to.</description>
				<path omitResourcePath="false">/links</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No documents available yet.</answer>
						<answer code="303">Forward to first page.</answer>
					</responses>
					<entities />
				</response>
			</operation>		
										
			<operation>
				<name>List of links using a specific tag (page)</name>
				<description>Returns a page of the paginated list of all tags.</description>
				<path omitResourcePath="false">/links/cursor/<param description="ID of link used as cursor">link-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Page in response.</answer>
						<answer code="404">Cursor/page not found</answer>
					</responses>
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "page":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/links/cursor/1ec99ce0-a28e-11e0-8264-0800200c9a66"
      }
   },
   "list":[
      {
         "documentlink":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66"
            }
         }
      }
   ],
   "related":[
      {
         "link":{
            "rel":"previous",
            "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/links/cursor/5330edf0-a68d-11e0-8264-0800200c9a66"
         }
      },
      {
         "link":{
            "rel":"next",
            "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/links/cursor/8d45b5ff-c6b8-4ec3-9fd1-96704233be3e"
         }
      }
   ]
}]]></code>
						</entity>
					</entities>
				</response>
			</operation>	
		
		</resource>	
	
	<!-- ============================================================================================================= 
			Vote
	============================================================================================================== -->				
		<resource>
			<name>Vote</name>
			<description>This resource represents a vote. Users can vote on various resources. The voting URI path is appended to the original URI. 
			The following resources of the Core API can be voted on: <it>Attachment</it>, <it>Link</it>, <it>Relation</it>, <it>Position</it>, <it>Time</it> , <it>Comment</it> and <it>Tag</it>.</description>
			<path>/<param description="resource identifier">resource</param>/vote/user/<param description="user ID">user-id</param></path>
			
			<operation>
				<name>Vote on a resource</name>
				<description>Casts a vote by the user authenticating the request.</description>
				<path omitResourcePath="false">/<param description="up or down">vote</param></path>
				<formats><format>n/a</format></formats>
				<request>
					<method>PUT</method>
					<authentication mandatory="true" />
					<entities>						
					</entities>
				</request>
				<response>
					<responses>
						<answer code="202">Vote has been casted.</answer>
						<answer code="403">Mismatch of voting and authenticated user.</answer>
					</responses>
					<entities>					
					</entities>										
				</response>
			</operation>		
			
			<operation>
				<name>Get a vote of the user</name>
				<description>Returns the current vote of the user authenticating the request.</description>
				<path omitResourcePath="false"></path>
				<formats><format>n/a</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true" />
					<entities>						
					</entities>
				</request>
				<response>
					<responses>
						<answer code="200">Vote in response body.</answer>
						<answer code="403">Mismatch of voted and authenticated user.</answer>
						<answer code="404">User has not yet voted</answer>
					</responses>
					<entities>	
						<entity>
<code language="js"><![CDATA[{
   "vote": "up"
}]]></code>
						<description>A response containing an up-vote. </description>
						</entity>
						<entity>
<code language="js"><![CDATA[{
   "vote": "down"
}]]></code>
						<description>A response containing a down-vote. </description>
						</entity>						
					</entities>										
				</response>
			</operation>			

			<operation>
				<name>Get all votes</name>
				<description>Returns a summary of all votes for this resource.</description>
				<path omitResourcePath="true">/<param description="resource identifier">resource</param>/votes</path>
				<formats><format>n/a</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true" />
					<entities>						
					</entities>
				</request>
				<response>
					<responses>
						<answer code="200">Votes in response body.</answer>
						<answer code="404">Resource not found</answer>
					</responses>
					<entities>	
						<entity>
<code language="js"><![CDATA[{
   "votes":{
  	 "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/resource/votes"
         },
      "up":123,
      "down":42
   }
}]]></code>
						</entity>						
					</entities>										
				</response>
			</operation>			
								
			<operation>
				<name>Undo a vote on a resource</name>
				<description>Undos a vote that has been casted before.</description>
				<path omitResourcePath="false" />
				<formats><format>n/a</format></formats>
				<request>
					<method>DELETE</method>
					<authentication mandatory="true" />
					<entities>						
					</entities>
				</request>
				<response>
					<responses>
						<answer code="204">Vote has been removed.</answer>
						<answer code="403">Mismatch of voting and authenticated user.</answer>
						<answer code="404">No vote found.</answer>
					</responses>
					<entities>					
					</entities>										
				</response>
			</operation>				
		</resource>	
		

	
	<!-- ============================================================================================================= 
			Query
	============================================================================================================== -->
		<resource>
			<name>Query</name>
			<description>An interface resource for query execution. A query must be dispatched to the server 
			which will return a URI for the query. This URI then contains the results. Results are paginated using cursors.
			A query resource stores the initial query parameters, not the result set. Thus, queries can be re-executed by using the same URI,
			although the corresponding results may have changed. Be aware of this fact when applying caching to query results.
<code language="plain">
   Client                      Core Service

     |                               |
     |                               |
     |      (1) POST Query           |
     |------------------------------>|
     |                               |
     |      (2) 202 + Location       |
     |&lt;------------------------------|
     |                               |
     |                               |
     |      (3) GET Query Resource   |
     |------------------------------>|
     |                               |
     |      (4) 303 + 1st page URI   |
     |&lt;------------------------------|
     |                               |
     |                               |
     |      (5) GET 1st result page  |
     |------------------------------>|
     |                               |
     |      (6) 200 + First page     |
     |&lt;------------------------------|
     |                               |
</code>		
Note that step 5 and 6 must be repeated for additional result pages. Also, step 1 and 2 can be skipped if an existing query (client already knows query URI) should be re-executed.			
			</description>
			<path>/query/stored/<param description="query id">query-id</param></path>
			
			
			<operation>
				<name>Dispatch a query</name>
				<description>Sends a custom query using the passed parameters.</description>
				<path omitResourcePath="true">/query</path>
				<formats><format>n/a</format></formats>
				<request>
					<method>POST</method>
					<authentication mandatory="true" />
					<entities>		
						<entity>
<code language="js"><![CDATA[{
   "query":{
      "time":{
         "start":"2010-06-29T19:15:51.765Z",
         "end":"2010-06-29T19:15:50.000Z"
      },
      "location":{
         "bbox":[
            100.0,
            0.0,
            105.0,
            1.0
         ]
      },
      "tags":null,
      "publishedBetween":null
   }
}]]></code>
						<description>A minimal query is built using two mandatory parameters (<tt>time</tt> and <tt>location</tt>). The other
						two parameters, <tt>tags</tt> and <tt>publishedBetween</tt> are optional and must be set to <tt>null</tt>, if not used.
						The result pages contain all documents matching all of the constraints (using a boolean AND). If there are more 
						than one items for location and time origin, the item with the best votes will be used.
						</description>
						</entity>
						
						<entity>
<code language="js"><![CDATA[{
   "query":{
      "time":{
         "start":"2010-06-29T19:15:51.765Z",
         "end":"2010-06-29T19:15:50.000Z"
      },
      "location":{
         "bbox":[
            100.0,
            0.0,
            105.0,
            1.0
         ]
      },
      "tags":[
         "http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
      ],
      "publishedBetween":{
         "start":"2010-06-01T00:00:00.000Z",
         "end":"2010-07-01T00:00:00.000Z"
      }
   }
}]]></code>
						<description>A more complex query featuring tags and publishing time. Using a list of <tt>tags</tt>, the result set 
						can be narrowed down to documents being tagged with the given tags. 
						The <tt>publisedBetween</tt> constraint can be used to restrict the result set depending on the time
						documents have been uploaded to the system. This is very useful do run incremental queries, or to update 
						query result sets without refetching already known items.
						Both <tt>start</tt> and <tt>end</tt> are necessary for the publishing time filter, but deliberately strong values
						can be used to emulate wildcard behaviour.  
						</description>
						</entity>
					</entities>
				</request>
				<response>
					<responses>
						<answer code="202">Query accepted, result location in header.</answer>
						<answer code="400">Invalid query parameters.</answer>
					</responses>
					<entities>					
					</entities>										
				</response>
			</operation>
			
			<operation>
				<name>Forward to query result page</name>
				<description>A request to a query URI will always be forwarded to the first page of the result set using the first cursor.</description>
				<path omitResourcePath="true">/query</path>
				<formats><format>n/a</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true" />
					<entities>		
					</entities>
				</request>
				<response>
					<responses>
						<answer code="204">Query returned no results.</answer>
						<answer code="303">Query found, result location in header.</answer>
						<answer code="404">Query not found.</answer>
					</responses>
					<entities>					
					</entities>										
				</response>
			</operation>	
			
						
<!-- 						
			<operation>
				<name>Execute a common location-based query</name>
				<description>A set of predefined queries for tasks currently valid by time and the user's position. The type affects the order of the tasks emitted as results.</description>
				<path omitResourcePath="true">/query/common/<param description="type: one of 'newest', 'unattended', 'expiring' or 'popular'">type</param>?lat=<param description="latitude">latitude</param>&amp;lon=<param description="longitude">longitude</param></path>
				<formats><format>n/a</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true" />
					<entities>		
					</entities>
				</request>
				<response>
					<responses>
						<answer code="303">Query accepted, result location in header.</answer>
						<answer code="404">Invalid coordinates.</answer>
					</responses>
					<entities>					
					</entities>										
				</response>
			</operation>	
 -->			
					
			<operation>
				<name>Get query result page</name>
				<description>Returns a paginated result page, identified by the cursor. A result page always contains links to related pages.</description>
				<path omitResourcePath="false">/cursor/<param description="cursor id">cursor-id</param></path>
				<formats><format>n/a</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true" />
					<entities>		
					</entities>
				</request>
				<response>
					<responses>
						<answer code="200">Result page in response.</answer>
						<answer code="404">Query or cursor not found.</answer>
					</responses>
					<entities>	
						<entity>
<code language="js"><![CDATA[{
   "query":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/query/stored/128ecf542a35ac5270a87dc740918404"
      }
   },
   "results":{
      "count":101,
      "page":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/query/stored/128ecf542a35ac5270a87dc740918404/cursor/def"
         },
         "list":[
            {
               "document":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/2671f383-a28c-44d5-b86b-f7f04bb0a015"
                  }
               }
            }
         ],
         "related":[
            {
               "link":{
                  "rel":"first",
                  "href":"http://core.example.foo/v2/query/stored/128ecf542a35ac5270a87dc740918404/cursor/abc"
               }
            },
            {
               "link":{
                  "rel":"previous",
                  "href":"http://core.example.foo/v2/query/stored/128ecf542a35ac5270a87dc740918404/cursor/abc"
               }
            },
            {
               "link":{
                  "rel":"next",
                  "href":"http://core.example.foo/v2/query/stored/128ecf542a35ac5270a87dc740918404/cursor/ghi"
               }
            }
         ]
      }
   }
}]]></code>
						<description>A query result page containing links to the previous, next and first page. The first page link is always present, the others only when the other pages acutally exist.</description>
						</entity>	
					</entities>										
				</response>
			</operation>
			
		</resource>	
	
	<!-- ============================================================================================================= 
			User
	============================================================================================================== -->
		<resource>
			<name>User</name>
			<description>This resource represents a user. A user account is neccessary for most of the interactions with the diretto platform.</description>
			<path>/user/<param description="user ID">user-id</param></path>

			<operation>
				<name>List of users (forward)</name>
				<description>Forwards to the list of links.</description>
				<path omitResourcePath="true">/users</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No entries available yet.</answer>
						<answer code="303">Forward to list.</answer>
					</responses>
					<entities />
				</response>
			</operation>				
			
			<operation>
				<name>List of users (page)</name>
				<description>Provides a list of all registered users. Responses are paginated using cursors. 
				 The request can also be executed omitting the cursor ID. In the case, the URI of the first page is returned.</description>
				<path omitResourcePath="true">/users/cursor/<param description="the user ID used as cursor">cursor-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities>
	<entity>
							<code language="js">
<![CDATA[{
   "page":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/users/cursor/123456"
      }
   },
   "list":[
      {
         "user":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/user/123456"
            },
            "username":"John Doe"
         }
      }
   ],
   "related":[
      {
         "link":{
            "rel":"previous",
            "href":"http://core.example.foo/v2/users/cursor/5330edf0-a68d-11e0-8264-0800200c9a66"
         }
      },
      {
         "link":{
            "rel":"next",
            "href":"http://core.example.foo/v2/users/cursor/8d45b5ff-c6b8-4ec3-9fd1-96704233be3e"
         }
      }
   ]
}]]>
							</code>
						</entity>	
							<description>An example page of users. The number of elements shown has been limited to a single comment per page to keep this example simple.</description>
						
					</entities>
				</request>
				<response>
					<responses>
						<answer code="200">List in response entity</answer>
						<answer code="303">Location of first when queried without cursor ID.</answer>
						<answer code="404">List in response entity</answer>
					</responses>
					<entities></entities>
				</response>
			</operation>
			
			<operation>
				<name>Create a new user account</name>
				<description>Creates a new user account, if service instance has enabled this feature.</description>
				<path omitResourcePath="true">/users</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication  mandatory="false" />
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
	 "email" : "john@doe.net",
	 "password" : "da39a3ee5e6b4b0d3255bfef95601890afd80709",
	 "username" : "John Doe"
}]]></code>
						</entity>						
					</entities>
				</request>
				<response>
					<responses>
						<answer code="201">User account has been created. The location header contains its URI and thus also the user id.</answer>
						<answer code="400">The provided data are incomplete or invalid.</answer>
						<answer code="403">The service instance does not allow the creation of new user accounts.</answer>
						<answer code="409">The user account has not been created, because there already exists an account with matching parameters.</answer>
					</responses>
					<entities />										
				</response>
			</operation>
			<operation>
				<name>Change a user account</name>
				<description>Changes an existing user account. This operation can only be executed for the user that is authenticating the request. Please note that the user id cannot be changed.</description>
				<path />
				<formats><format>application/json</format></formats>
				<request>
					<method>PUT</method>
					<authentication  mandatory="true" />
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
	 "email" : "john@doe.net",
	 "password" : "da39a3ee5e6b4b0d3255bfef95601890afd80709",
	 "username" : "John Doe"
}]]></code>
						</entity>						
					</entities>
				</request>
				<response>
					<responses>
						<answer code="202">User account has been changed.</answer>
						<answer code="400">The provided data are incomplete or invalid.</answer>
						<answer code="403">The user making this call is not allowed to change this user account.</answer>
					</responses>
					<entities />										
				</response>
			</operation>		
			<operation>
				<name>Retrieve user data</name>
				<description>Provides information about a user except the password.</description>
				<path />
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities>
					</entities>
				</request>
				<response>
					<responses>
						<answer code="200">User data is available in response entity.</answer>
						<answer code="404">No user found with the given user id.</answer>
					</responses>
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "user":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/user/123456"
      },
      "username":"John Doe"
   }
}]]></code>
						<description>A sample response for a regular user.</description>					
						</entity>
						<entity>
							<code language="js">
<![CDATA[{
   "user":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/user/123456"
      },
      "username":"John Doe",
      "email" : "john@doe.net"
   }
}]]></code>
						<description>When the user retrieves his own profile, the e-mail address is also included in the response.</description>					
						</entity>
					</entities>									
				</response>
			</operation>	
		</resource>

	
	<!-- ============================================================================================================= 
			Comment
	============================================================================================================== -->
		<resource>
			<name>Comment</name>
			<description>This resource represents a comment.</description>
			<path>/document/<param description="document ID">doc-id</param>/comment/<param description="comment ID">comment-id</param></path>
			
			<operation>
				<name>Create a new comment</name>
				<description>Adds a new comment to the task.</description>
				<path omitResourcePath="true">/document/<param description="document ID">doc-id</param>/comments</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication mandatory="true" />
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "content":"blablabla"
}]]></code>
						</entity>
					</entities>
				</request>
				<response>
					<responses>
						<answer code="201">Comment has been created.</answer>						
						<answer code="400">Invalid comment data (i.e. length).</answer>						
						<answer code="404">Document not found.</answer>						
					</responses>
					<entities />										
				</response>
			</operation>	
						
			<operation>
				<name>Get a single comment</name>
				<description>Returns the full comment.</description>
				<path />
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Comment is available in response entity.</answer>
						<answer code="404">Comment not found.</answer>
					</responses>
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "comment":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comment/8e252710-77cf-11e0-a1f0-0800200c9a66"
      },
      "content":"blablabla",
      "creationTime":"2010-07-17T18:54:11.939Z",
      "creator":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456"
         }
      },
      "votes":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comment/8e252710-77cf-11e0-a1f0-0800200c9a66/votes"
         },
         "up":12,
         "down":2
      }
   }
}]]></code>
						</entity>							
					</entities>
				</response>
			</operation>
			
			<operation>
				<name>List of comments of a document (forward)</name>
				<description>Forwards to a paginated list of comments that have been added to the document.</description>
				<path omitResourcePath="true">/document/<param description="document id">doc-id</param>/comments</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No comments available yet</answer>
						<answer code="303">Location header contains link to first page of comments</answer>
						<answer code="404">Document not found.</answer>
					</responses>
					<entities />
				</response>
			</operation>
			
			<operation>
				<name>List of comments of a document (page)</name>
				<description>Returns a list of all comments bound to the document.</description>
				<path omitResourcePath="true">/document/<param description="document id">doc-id</param>/comments/cursor/<param description="comment id">comment-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Page in response</answer>
						<answer code="404">Cursor not found</answer>
					</responses>
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "page":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comments/cursor/8e252710-77cf-11e0-a1f0-0800200c9a66"
      }
   },
   "list":[
      {
         "comment":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comment/8e252710-77cf-11e0-a1f0-0800200c9a66"
            },
            "content":"blablabla",
            "creationTime":"2010-07-17T18:54:11.939Z",
            "creator":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/123456"
               }
            },
            "votes":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comment/8e252710-77cf-11e0-a1f0-0800200c9a66/votes"
               },
               "up":12,
               "down":2
            }
         }
      }
   ],
   "related":[
      {
         "link":{
            "rel":"previous",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comments/cursor/5330edf0-a68d-11e0-8264-0800200c9a66"
         }
      },
      {
         "link":{
            "rel":"next",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comments/cursor/8d45b5ff-c6b8-4ec3-9fd1-96704233be3e"
         }
      }
   ]
}]]></code>
						</entity>							
					</entities>
				</response>
			</operation>			
						
			<operation>
				<name>List of comments of a user (forward)</name>
				<description>Forwards to a paginated list of comments that have been written by the user.</description>
				<path omitResourcePath="true">/user/<param description="user id">user-id</param>/comments</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No comments available yet</answer>
						<answer code="303">Location header contains link to first page of comments</answer>
						<answer code="404">User not found</answer>
					</responses>
					<entities />
				</response>
			</operation>
			
			<operation>
				<name>List of comments of a user (page)</name>
				<description>Returns a list of all comments made by a user</description>
				<path omitResourcePath="true">/user/<param description="user id">user-id</param>/comments/cursor/<param description="comment id">comment-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Page in response</answer>
						<answer code="404">Cursor not found</answer>
					</responses>
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "page":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/user/comments/cursor/8e252710-77cf-11e0-a1f0-0800200c9a66"
      }
   },
   "list":[
      {
         "comment":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comment/8e252710-77cf-11e0-a1f0-0800200c9a66"
            },
            "content":"blablabla",
            "creationTime":"2010-07-17T18:54:11.939Z",
            "creator":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/123456"
               }
            },
            "votes":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comment/8e252710-77cf-11e0-a1f0-0800200c9a66/votes"
               },
               "up":12,
               "down":2
            }
         }
      }
   ],
   "related":[
      {
         "link":{
            "rel":"previous",
            "href":"http://core.example.foo/v2/user/comments/cursor/5330edf0-a68d-11e0-8264-0800200c9a66"
         }
      },
      {
         "link":{
            "rel":"next",
            "href":"http://core.example.foo/v2/user/comments/cursor/8d45b5ff-c6b8-4ec3-9fd1-96704233be3e"
         }
      }
   ]
}]]></code>
						</entity>							
					</entities>
				</response>
			</operation>
			
				
		</resource>			

	
	<!-- ============================================================================================================= 
			Link
	============================================================================================================== -->
		<resource>
			<name>Link</name>
			<description>This resource represents a link. A link
			is unidirectional connection between two documents. The semantics of a link is
			an unidirectional trace from the source document to the destination document,
			such as  happens-after or is-the-result-of.
			</description>
			<path>/link/<param description="link ID">link-id</param></path>

			<operation>
				<name>Create a new link</name>
				<description>Adds a new link to the platform.</description>
				<path omitResourcePath="true">/links</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication  mandatory="true" />
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "title":"blabla",
   "description":"asdasd",
   "source":{
      "document":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66"
         }
      }
   },
   "destination":{
      "document":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128"
         }
      }
   }
}]]></code>
						</entity>							
					</entities>
				</request>
				<response>
					<responses>
						<answer code="201">Link created.</answer>
						<answer code="400">Invalid data.</answer>
					</responses>
					<entities />
				</response>
			</operation>
						
			<operation>
				<name>Retrieve a link</name>
				<description>Returns a link.</description>
				<path></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Link data in response.</answer>
						<answer code="404">Link not found.</answer>
					</responses>
					<entities>
						<entity>
							<code language="js">
<![CDATA[{
   "documentlink":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66"
      },
      "title":"blabla",
      "description":"asdasd",
      "creationTime":"2010-07-17T18:54:11.939Z",
      "creator":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456"
         }
      },
      "source":{
         "document":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66"
            }
         }
      },
      "destination":{
         "document":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128"
            }
         }
      },
      "votes":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/votes"
         },
         "up":12,
         "down":2
      },
      "tags":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tags"
         },
         "list":[
            {
               "tag":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                  },
                  "baseTag":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                     }
                  },
                  "value":"mytag",
                  "creationTime":"2010-07-17T18:54:11.939Z",
                  "creator":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/votes"
                     },
                     "up":12,
                     "down":2
                  }
               }
            }
         ]
      }
   }
}]]></code>
						</entity>							
					</entities>
				</response>
			</operation>
									
			<operation>
				<name>Retrieve all links containing a specific document</name>
				<description>Returns a list of links that contain a given document as source or destination.</description>
				<path omitResourcePath="true">/documents/<param description="document ID">doc-id</param>/links</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Link list in response.</answer>
						<answer code="404">Document not found.</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "documentlinks":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128/links"
      },
      "in":[
         {
            "documentlink":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66"
               },
               "title":"blabla",
               "description":"asdasd",
               "creationTime":"2010-07-17T18:54:11.939Z",
               "creator":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/user/123456"
                  }
               },
               "source":{
                  "document":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66"
                     }
                  }
               },
               "destination":{
                  "document":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128"
                     }
                  }
               },
               "votes":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/votes"
                  },
                  "up":12,
                  "down":2
               },
               "tags":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tags"
                  },
                  "list":[
                     {
                        "tag":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                           },
                           "baseTag":{
                              "link":{
                                 "rel":"self",
                                 "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                              }
                           },
                           "value":"mytag",
                           "creationTime":"2010-07-17T18:54:11.939Z",
                           "creator":{
                              "link":{
                                 "rel":"self",
                                 "href":"http://core.example.foo/v2/user/123456"
                              }
                           },
                           "votes":{
                              "link":{
                                 "rel":"self",
                                 "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/votes"
                              },
                              "up":12,
                              "down":2
                           }
                        }
                     }
                  ]
               }
            }
         }
      ],
      "out":[

      ]
   }
}]]></code>
							<description>The number of elements shown has been limited to a single item per page only to keep this example simple.</description>
						</entity>					
					</entities>
				</response>
			</operation>
			
			<operation>
				<name>List of links created since a specific date (forward)</name>
				<description>Forwards to the list of links that have been created since a given date.</description>
				<path omitResourcePath="true">/links/since/<param description="A RFC 3339 compliant date (Zulu time) to be used as split point.">split date</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No new links available since that date.</answer>
						<answer code="303">Forward to list.</answer>
					</responses>
					<entities />
				</response>
			</operation>	
					
			<operation>
				<name>List of links (forward)</name>
				<description>Forwards to the list of links.</description>
				<path omitResourcePath="true">/links</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No links available yet.</answer>
						<answer code="303">Forward to list.</answer>
					</responses>
					<entities />
				</response>
			</operation>	
					
			<operation>
				<name>List of links (page)</name>
				<description>List of links, sorted by creation date.</description>
				<path omitResourcePath="true">/links/cursor/<param description="link id">link-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">List in response.</answer>
						<answer code="404">Cursor not found.</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "page":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/links/cursor/1ec99ce0-a28e-11e0-8264-0800200c9a66"
      }
   },
   "list":[
      {
         "documentlink":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66"
            }
         }
      }
   ],
   "related":[
      {
         "link":{
            "rel":"previous",
            "href":"http://core.example.foo/v2/links/cursor/5330edf0-a68d-11e0-8264-0800200c9a66"
         }
      },
      {
         "link":{
            "rel":"next",
            "href":"http://core.example.foo/v2/links/cursor/8d45b5ff-c6b8-4ec3-9fd1-96704233be3e"
         }
      }
   ]
}]]></code>
							<description>The number of elements shown has been limited to a single item per page only to keep this example simple.</description>
						</entity>					
					</entities>
				</response>
			</operation>				


		</resource>			
	
	<!-- ============================================================================================================= 
			Collection
	============================================================================================================== -->
		<resource>
			<name>Collection</name>
			<description>This resource represents a collection of documents that a user can create and maintain personally. Users can 
			set a collection to private or non-private. Once a collection is private, only the user who created the collection
			can see the collection. When the user changes the private setting, this only affects all subsequent views. 
			Either way the creator of a collection is the only one who can add new documents to a collection.</description>
			<path>/user/<param description="user ID">user-id</param>/collection/<param description="collection ID">collection-id</param></path>
			
			<operation>
				<name>Create a new collection</name>
				<description>Creates a new collection for this user.</description>
				<path omitResourcePath="true">/user/<param description="user id">user-id</param>/collections</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="201">Collection created.</answer>
						<answer code="400">Invalid collection data.</answer>
						<answer code="403">Not allowed for this user.</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "title":"My Favorite Documents of Event X",
   "description":"This is a list of the coolest documents that show what happend during event X",
   "private":false
}]]></code>
							<description>Note that the <tt>private</tt> flag must be set.</description>
						</entity>					
					</entities>
				</response>
			</operation>
						
			<operation>
				<name>Add a document to a collection</name>
				<description>Takes an existing document from the platform and attaches it to the collection. This call has no effect when the document has already been added. 
				Note that only the creator can add documents to a collection.</description>
				<path omitResourcePath="false">/documents</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication  mandatory="true" />
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "document":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/550e8400-e29b-11d4-a716-446655440000"
      }
   }
}]]></code>
						</entity>					
					</entities>
				</request>
				<response>
					<responses>
						<answer code="202">Document added (also returned when document already existed in collection).</answer>
						<answer code="400">Invalid document data.</answer>
						<answer code="403">Not allowed for this user.</answer>
						<answer code="404">Document not found.</answer>
					</responses>
					<entities />
				</response>
			</operation>	
								
			<operation>
				<name>List of collected documents (forwarder)</name>
				<description>Forwards to a cursored list of documents of this collection. Only possible if collection is not private.</description>
				<path omitResourcePath="false">/documents</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">Collection is empty.</answer>
						<answer code="303">Forward to first page</answer>
						<answer code="403">Not allowed, when collection is private.</answer>
					</responses>
					<entities />
				</response>
			</operation>	
											
			<operation>
				<name>List of collected documents (page)</name>
				<description>Forwards to a cursored list of documents of this collection. Only possible if collection is not private.</description>
				<path omitResourcePath="false">/documents/cursor/<param description="the document ID used as cursor">cursor-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Page in response.</answer>
						<answer code="403">Not allowed, when collection is private.</answer>
						<answer code="404">Not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "page":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/user/123456/collection/5330edf0-a68d-11e0-8264-0800200c9a66/documents/cursor/550e8400-e29b-11d4-a716-446655440000"
      }
   },
   "list":[
      {
         "document":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/550e8400-e29b-11d4-a716-446655440000"
            }
         }
      }
   ],
   "related":[
      {
         "link":{
            "rel":"previous",
            "href":"http://core.example.foo/v2/user/123456/collection/5330edf0-a68d-11e0-8264-0800200c9a66/documents/cursor/5330edf0-a68d-11e0-8264-0800200c9a66"
         }
      },
      {
         "link":{
            "rel":"next",
            "href":"http://core.example.foo/v2/user/123456/collection/5330edf0-a68d-11e0-8264-0800200c9a66/documents/cursor/8d45b5ff-c6b8-4ec3-9fd1-96704233be3e"
         }
      }
   ]
}]]></code>
							<description>The response contains all meta data of the collection. However, the documents available in the collection must be fetched using the paginated list in additional calls.</description>
						</entity>					
					</entities>
				</response>
			</operation>
															
			<operation>
				<name>List of collections of a user</name>
				<description>List all public collections of a user. If the user running this request is also the owner of the collections, also private collections will be listed.</description>
				<path omitResourcePath="true">/user/<param description="user id">user-id</param>/collections</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Collection list in response.</answer>
						<answer code="404">User not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "collections":[
      {
         "collection":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/user/123456/collection/5330edf0-a68d-11e0-8264-0800200c9a66"
            },
            "title":"My Favorite Documents of Event X",
            "description":"This is a list of the coolest documents that show what happend during event X",
            "creationTime":"2010-07-17T18:54:11.939Z",
            "creator":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/123456"
               }
            },
            "private":false,
            "documents":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/123456/collection/5330edf0-a68d-11e0-8264-0800200c9a66/documents"
               }
            }
         }
      }
   ]
}]]></code>
							<description>The response contains all meta data of the collection. However, the documents available in the collection must be fetched using the paginated list in additional calls.</description>
						</entity>					
					</entities>
				</response>
			</operation>	
					
			<operation>
				<name>Get a collection</name>
				<description>Returns a collection, if public, or the requesting user is the owner.</description>
				<path/>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Collection in response entity.</answer>
						<answer code="403">Not allowed, collection is private.</answer>
						<answer code="404">User or collection not found.</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "collection":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/user/123456/collection/5330edf0-a68d-11e0-8264-0800200c9a66"
      },
      "title":"My Favorite Documents of Event X",
      "description":"This is a list of the coolest documents that show what happend during event X",
      "creationTime":"2010-07-17T18:54:11.939Z",
      "creator":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456"
         }
      },
      "private":false,
      "documents":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456/collection/5330edf0-a68d-11e0-8264-0800200c9a66/documents"
         }
      }
   }
}]]></code>
							<description>The response contains all meta data of the collection. However, the documents available in the collection must be fetched using the paginated list in additional calls.</description>
						</entity>					
					</entities>
				</response>
			</operation>
								
			<operation>
				<name>Change collection data</name>
				<description>Updates the collection meta data</description>
				<path/>
				<formats><format>application/json</format></formats>
				<request>
					<method>PUT</method>
					<authentication  mandatory="true" />
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "title":"My Favorite Documents of Event X",
   "description":"This is a list of the coolest documents that show what happend during event X",
   "private":false
}]]></code>
							<description>Note that the <tt>private</tt> flag must be set.</description>
						</entity>					
					</entities>
				</request>
				<response>
					<responses>
						<answer code="202">Collection in response entity.</answer>
						<answer code="400">Invalid update data.</answer>
						<answer code="403">Not allowed, collection is private.</answer>
						<answer code="404">Collection not found.</answer>
					</responses>
					<entities />
				</response>
			</operation>
								
			<operation>
				<name>Delete a collection</name>
				<description>Removes a collection. Warning: This operation cannot be undone.</description>
				<path/>
				<formats><format>application/json</format></formats>
				<request>
					<method>DELETE</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">Collection deleted.</answer>
						<answer code="403">Not allowed, collection is private.</answer>
						<answer code="404">Collection not found.</answer>
					</responses>
					<entities />
				</response>
			</operation>
								
		</resource>		
		
			
	<!-- ============================================================================================================= 
			Message
	============================================================================================================== -->
		<resource>
			<name>Message</name>
			<description>This resource represents a private message that can be sent from one user to another. No other user  can access this message. When a new message has been posted, two independent copies will be stored: one in the outbox of the sender, and one in the inbox of the receiver. 
			Please note that there is no API functionality for marking messages as 'read'. If necessary this feature can be implemented by the service clients.
			The owner of the user resource and the user executing the request must be the same (except for API call posting a new message).</description>
			<path>/user/<param description="user ID">user-id</param>/inbox/message/<param description="message ID">msg-id</param></path>
			
			<operation>
				<name>Post a new message</name>
				<description>Creates a new collection for this user.</description>
				<path omitResourcePath="true">/user/<param description="user id (receiver)">user-id</param>/inbox/messages</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication  mandatory="true" />
					<entities>
						<entity>
<code language="js"><![CDATA[{
	"title":"Yada yada",
	"content":"bla bla bla.."
}]]></code>
							<description>Only title and message content must be posted. Note that that both title and content length may be constrained and invalid messages may be rejected.</description>
						</entity>					
					</entities>
				</request>
				<response>
					<responses>
						<answer code="201">Message created.</answer>
						<answer code="400">Invalid message data.</answer>
						<answer code="403">Not allowed for this user.</answer>
						<answer code="404">User not found.</answer>
					</responses>
					<entities />
				</response>
			</operation>	
					

								
			<operation>
				<name>List of inbox messages received since a specific date (forward)</name>
				<description>Forwards to the list of incoming messages, that have been received since a given date. Useful for incremental requests of new messages.</description>
				<path omitResourcePath="true">/user/<param description="user id">user-id</param>/inbox/messages/since/<param description="A RFC 3339 compliant date (Zulu time) to be used as split point.">split date</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No message received since that date.</answer>
						<answer code="303">Forward to list.</answer>
						<answer code="403">Not allowed for this user.</answer>
					</responses>
					<entities />
				</response>
			</operation>	
					
			<operation>
				<name>List of messages (forward)</name>
				<description>Forwards to the list of sent messages</description>
				<path omitResourcePath="true">/user/<param description="user id">user-id</param>/<param description="'inbox' or 'outbox'">boxtype</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No message received yet.</answer>
						<answer code="303">Forward to list.</answer>
						<answer code="403">Not allowed for this user.</answer>
						<answer code="404">User not found.</answer>
					</responses>
					<entities />
				</response>
			</operation>	
					
			<operation>
				<name>List of messages (page)</name>
				<description>List of sent messages, ordered by date and paginated.</description>
				<path omitResourcePath="true">/user/<param description="user id">user-id</param>/<param description="'inbox' or 'outbox'">boxtype</param>/messages/cursor/<param description="message id">msg-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">List in response.</answer>
						<answer code="403">Not allowed for this user.</answer>
						<answer code="404">Cursor not found.</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "page":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/user/123456/outbox/messages/cursor/2671f383-a28c-44d5-b86b-f7f04bb0a015"
      }
   },
   "list":[
      {
         "message":{
            "creationTime":"2010-07-17T18:54:11.939Z",
            "links":[
               {
                  "link":{
                     "rel":"alternate",
                     "href":"http://core.example.foo/v2/user/123456/outbox/message/128ecf542a35ac5270a87dc740918404"
                  }
               },
               {
                  "link":{
                     "rel":"alternate",
                     "href":"http://core.example.foo/v2/user/789012/inbox/message/128ecf542a35ac5270a87dc740918404"
                  }
               }
            ],
            "sender":{
               "link":{
                  "rel":"author",
                  "href":"http://core.example.foo/v2/user/123456"
               }
            },
            "receiver":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/789012"
               }
            },
            "title":"Yada yada",
            "content":"bla bla bla.."
         }
      }
   ],
   "related":[
      {
         "link":{
            "rel":"previous",
            "href":"http://core.example.foo/v2/user/123456/outbox/messages/cursor/5330edf0-a68d-11e0-8264-0800200c9a66"
         }
      },
      {
         "link":{
            "rel":"next",
            "href":"http://core.example.foo/v2/user/123456/outbox/messages/cursor/8d45b5ff-c6b8-4ec3-9fd1-96704233be3e"
         }
      }
   ]
}]]></code>
							<description>An example page of messages. The number of elements shown has been limited to a single comment per page to keep this example simple.</description>
						</entity>
					</entities>
				</response>
			</operation>	

			<operation>
				<name>Retrieve a message</name>
				<description>Returns a single message.</description>
				<path omitResourcePath="true">/user/<param description="user id">user-id</param>/<param description="'inbox' or 'outbox'">boxtype</param>/message/<param description="message id">msg-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">List in response.</answer>
						<answer code="403">Not allowed for this user.</answer>
						<answer code="404">Message not found.</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "message":{
      "creationTime":"2010-07-17T18:54:11.939Z",
      "links":[
         {
            "link":{
               "rel":"alternate",
               "href":"http://core.example.foo/v2/user/123456/outbox/message/128ecf542a35ac5270a87dc740918404"
            }
         },
         {
            "link":{
               "rel":"alternate",
               "href":"http://core.example.foo/v2/user/789012/inbox/message/128ecf542a35ac5270a87dc740918404"
            }
         }
      ],
      "sender":{
         "link":{
            "rel":"author",
            "href":"http://core.example.foo/v2/user/123456"
         }
      },
      "receiver":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/789012"
         }
      },
      "title":"Yada yada",
      "content":"bla bla bla.."
   }
}]]></code>
						</entity>
					</entities>
				</response>
			</operation>				
			
			<operation>
				<name>Remove a message</name>
				<description>Removes single message. Please note that this API call will not delete the message copy in the box of the counterpart.</description>
				<path omitResourcePath="true">/user/<param description="user id">user-id</param>/<param description="'inbox' or 'outbox'">boxtype</param>/message/<param description="message id">msg-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>DELETE</method>
					<authentication  mandatory="true" />
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">Message deleted.</answer>
						<answer code="403">Not allowed for this user.</answer>
						<answer code="404">Message not found.</answer>
					</responses>
					<entities />
				</response>
			</operation>				
			
					
		</resource>
	
		
	<!-- ============================================================================================================= 
			KeyValue
	============================================================================================================== -->
		<resource>
			<name>Key-Value Pair</name>
			<description>This resource represents a key-value pair. Key-value pairs can be seen as structured tags for machines, as opposed to regular tags for human users.
			Key value pairs can be added to a document, and are accessable (readable) for all platform users. The key part consists of a namespace and a key name.
			The user id will be used as namespace and will be added automatically. The key name can be any string, with the minimal length of 3 characters and a maximum of 64 characters.
			Only alphanumerical chars plus the following symbols are allowed inside the key name: "<tt>-</tt>" "<tt>:</tt>" "<tt>_</tt>" and "<tt>.</tt>"
			
			The actual value must be string of limited length (actual length depends on the service implementation). Any non-textual content must be encoded using Base64 or similar encodings.
			Due to the user-based namespacing, multiple users can put values into this storage using the same string as key, ending up in different entries, separated by the user id.
			Please note that all key value pairs are public for all users, so they don't represent a mechanism for saving classified data.  
			
			</description>
			<path>/document/<param description="document ID">doc-id</param>/value/<param description="user ID for namespacing">user-id</param>/<param description="key name (valid chars: alphanumercial or one of '-' ':' '.' '_')">key</param></path>
			
			
			<operation>
				<name>Retrieve all key/value pairs for a document</name>
				<description>Returns a list of all key/value pairs available for the given document.</description>
				<path omitResourcePath="true">/document/<param description="document ID">doc-id</param>/values</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Key/value pairs in response</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "values":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/values"
      },
      "list":[
         {
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/value/7815696ecbf1c96e6894b779456d330e/test"
            },
            "key":{
               "namespace":"7815696ecbf1c96e6894b779456d330e",
               "field":"test"
            },
            "value":"VGhpcyBpcyBhbiBleGFtcGxl"
         }
      ]
   }
}]]></code>
						</entity>
					</entities>						
				</response>
			</operation>
			
			<operation>
				<name>Get a key/value pair</name>
				<description>Returns a specific key/value pair. Note that any user of the platform can execute this call.</description>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Key/value pair in response</answer>
						<answer code="404">Key not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "link":{
      "rel":"self",
      "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/value/7815696ecbf1c96e6894b779456d330e/test"
   },
   "key":{
      "namespace":"7815696ecbf1c96e6894b779456d330e",
      "field":"test"
   },
   "value":"VGhpcyBpcyBhbiBleGFtcGxl"
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>
							
			<operation>
				<name>Set a key/value pair</name>
				<description>Puts the given value into the storage using the given key name. The request will be executed
				if the user part of the key matches the user dispatching the request.</description>
				<formats><format>application/json</format></formats>
				<request>
					<method>PUT</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="202">Key/value pair has been set.</answer>
						<answer code="400">Invalid key or value</answer>
						<answer code="403">Wrong user, key namespace not allowed.</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "key":{
      "field":"test"
   },
   "value":"VGhpcyBpcyBhbiBleGFtcGxl"
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>
			
			<operation>
				<name>Remove a key/value pair</name>
				<description>Removes the given key/value pair. This is an irreversible call.</description>
				<formats><format>n/a</format></formats>
				<request>
					<method>DELETE</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">Key/value pair has been deleted.</answer>
						<answer code="400">Invalid key or value</answer>
						<answer code="403">Wrong user, key namespace not allowed.</answer>
					</responses>
					<entities/>
				</response>
			</operation>
						
		</resource>		
		
<!-- ============================================================================================================= 
			Time
	============================================================================================================== -->
		<resource>
			<name>Time</name>
			<description>This resource represents the point in time, when a document has been created.
			Users can provide alternative values for the temporal origin of this document, but any
			new contribution should either represent an improvement of the value or a correction. 
			In order to allow inaccurate data as well, also ranges can be suggested. In the context of 
			the diretto platform, a time range has the following meaning: The time the range starts
			represents the first possible moment the creation of the document may have started. The time the range
			ends represents the latest possible moment the creation of the document may have started. 
			When the document itself has a duration (such as audio or video documents), the duration must 
			not be added to the range, so the time value always depicts the moment in which the creation
			of the document may have been started.
			If the exact time of creation is known, the same value should be used for start and end.
			</description>
			<path>/document/<param description="document ID">doc-id</param>/time/<param description="An RFC 3339 compliant date (Zulu time) depicting the first possible moment of document creation">range-start</param>--<param description="An RFC 3339 compliant date (Zulu time) depicting the latest possible moment of document creation">range-end</param></path>
			
			<operation>
				<name>List all suggested creation times of a document</name>
				<description>Returns a list of all creation times that have been suggested by the users for the given document.
				The included number of votes for each suggestion can be used to rank the suggestions.
				</description>
				<path omitResourcePath="true">/document/<param description="document ID">doc-id</param>/times</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Creation time list in response</answer>
						<answer code="404">Document not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "times":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/times"
      },
      "list":[
         {
            "time":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/time/2010-06-29T19:00:00.000Z--2010-06-29T20:00:00.000Z"
               },
               "between":{
                  "after":"2010-06-29T19:00:00.000Z",
                  "before":"2010-06-29T20:00:00.000Z"
               },
               "creationTime":"2010-07-17T18:54:11.939Z",
               "creator":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/user/123456"
                  }
               },
               "votes":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/time/2010-06-29T19:15:50.000Z--2010-06-29T19:15:50.000Z/votes"
                  },
                  "up":4,
                  "down":1
               }
            }
         }
      ]
   }
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>

			
			<operation>
				<name>Suggest an alternative creation time for a document</name>
				<description>Adds a new suggestion for the creation time of this document.
				</description>
				<formats><format>n/a</format></formats>
				<request>
					<method>PUT</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="202">Suggestion accepted</answer>
						<answer code="400">Invalid time range</answer>
						<answer code="404">Document not found</answer>
					</responses>
					<entities/>
				</response>
			</operation>			
									
									
			<operation>
				<name>Get a suggested creation time of a document</name>
				<description>Returns a single creation time suggested for the given document.</description>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="false"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200"></answer>
						<answer code="404">Document or creation time not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "time":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/time/2010-06-29T19:00:00.000Z--2010-06-29T20:00:00.000Z"
      },
      "between":{
         "after":"2010-06-29T19:00:00.000Z",
         "before":"2010-06-29T20:00:00.000Z"
      },
      "creationTime":"2010-07-17T18:54:11.939Z",
      "creator":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456"
         }
      },
      "votes":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/time/2010-06-29T19:15:50.000Z--2010-06-29T19:15:50.000Z/votes"
         },
         "up":4,
         "down":1
      }
   }
}]]></code>
						</entity>
						<description>A time entry suggesting that document the given document has been created (or the creation has been started) between 19:00 and 20:00 on 2010-06-29, Zulu time.
						Please note that the <tt>creationTime</tt> denotes the creation time of the suggestion and not of the document.</description>
					</entities>					
				</response>
			</operation>			
						
		</resource>
		
<!-- ============================================================================================================= 
			Location
	============================================================================================================== -->
		<resource>
			<name>Location</name>
			<description>This resource represents the location, where a document has been created. The location is stored
			using WGS84 coordinates. In addition to the position, also a variance value can be provided, denoting the approximate
			variance in meters from the given position. This enables support for inaccurate location values. The position value
			is stored using the GeoJSON specification.
			</description>
			<path>/document/<param description="document ID">doc-id</param>/location/<param description="latitude as float value (degrees)">lat</param>,<param description="longitude as float value (degrees)">lon</param>,<param description="position variance as integer value (meters)">variance</param></path>

		<operation>
				<name>List all suggested location origins of a document</name>
				<description>Returns a list of all location origins that have been suggested by the users for the given document.
				The included number of votes for each suggestion can be used to rank the suggestions.
				</description>
				<path omitResourcePath="true">/document/<param description="document ID">doc-id</param>/locations</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Creation location list in response</answer>
						<answer code="404">Document not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "locations":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/locations"
      },
      "list":[
         {
            "location":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/location/48.39848,9.991246,100"
               },
               "position":{
                  "type":"Point",
                  "coordinates":[
                     9.991246,
                     48.39848
                  ]
               },
               "variance":100,
               "creationTime":"2010-07-17T18:54:11.939Z",
               "creator":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/user/123456"
                  }
               },
               "votes":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/location/48.39848,9.991246,100/votes"
                  },
                  "up":4,
                  "down":1
               }
            }
         }
      ]
   }
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>

			
			<operation>
				<name>Suggest an alternative location origin for a document</name>
				<description>Adds a new suggestion for the location origin for this document.
				</description>
				<formats><format>n/a</format></formats>
				<request>
					<method>PUT</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="202">Suggestion accepted</answer>
						<answer code="400">Invalid location</answer>
						<answer code="404">Document not found</answer>
					</responses>
					<entities/>
				</response>
			</operation>			
									
									
			<operation>
				<name>Get a suggested location origin of a document</name>
				<description>Returns a single location origin that has been suggested for the given document.</description>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="false"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200"></answer>
						<answer code="404">Document or location not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "location":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/location/48.39848,9.991246,100"
      },
      "position":{
         "type":"Point",
         "coordinates":[
            9.991246,
            48.39848
         ]
      },
      "variance":100,
      "creationTime":"2010-07-17T18:54:11.939Z",
      "creator":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456"
         }
      },
      "votes":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/location/48.39848,9.991246,100/votes"
         },
         "up":4,
         "down":1
      }
   }
}]]></code>
						</entity>
						<description>A location entry suggesting that the given document has been created around latitude 48.39848, longitude 9.991246 with a variance of 100 meters.
						Please note that the <tt>position</tt> value represents a valid GeoJSON object. GeoJSON is using a different order for positions (longitude, latitude)
						than the order used for building location resource URIs.</description>
					</entities>					
				</response>
			</operation>			
		</resource>	
		
	
	<!-- ============================================================================================================= 
			Attachment
	============================================================================================================== -->
		<resource>
			<name>Attachment*</name>
			<description>An attachment represents an actual resource or media, while a document is only a conceptual item in the terms of diretto.
			Thus, each document has at least one attachment - the file/resource submitted when the document has been created.
			However, the platform allows users to add other attachments to any documents. While the first attachment is normally unaltered, raw footage,
			additional attachments are often resized, processed or enhanced variants of the original file, providing additional use.   
			There are up to three groups of individuals involved in attachments. Any attachment has a publisher. This is always a registered platform user
			and the one who acutally adds the attachment to the platform. Furthermore, there are creators and contributors. Each attachment can have
			multiple (and also no) entires for creators and contributors. Each entry is either a referencing a  registered platform user or an external person.
			An external person has always a name, and may have an additional hyperlink to provide background information.
			Generally, two different kinds of attachments can be created (depending on the service configuration). When there is a Storage API service
			available, media files can be uploaded and stored on the platform itself. Alternatively, existing resource in the web can be used
			by using the type <tt>external</tt>. Then, only a hyperlink reference to the resource is stored. The actual types allowed are depending on
			the platform configuration and can be retrieved at the service resource.
			</description>
			<path>/document/<param description="document ID">doc-id</param>/attachment/<param description="attachment ID">attach-id</param></path>
			
			<operation>
				<name>Get details of a single attachment</name>
				<description>Returns a detailed attachment overview.</description>
				<path omitResourcePath="false"></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Attachment details in response</answer>
						<answer code="404">Document/Attachment not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "attachment":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66"
      },
      "title":"A cool image of fubar",
      "publishedTime":"2010-07-17T18:54:11.939Z",
      "publisher":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456"
         }
      },
      "mimeType":"image/jpeg",
      "file":{
         "size":132456,
         "link":{
            "rel":"self",
            "href":"http://storage.example.foo/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66.jpg"
         }
      },
      "votes":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66/votes"
         },
         "up":12,
         "down":2
      },
      "license":"Creative Commons Attribution-ShareAlike 3.0 Unported - Deed",
      "contributors":[

      ],
      "creators":[
         {
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/user/123456"
            }
         }
      ]
   }
}]]></code>
						</entity>
						<description>An attachment stored on the platform (<tt>file</tt> attribute is present). The document has been created and uploaded (published) by user with id 123456. Not contributors are listed and the license is identified by a using a text.</description>
						<entity>
<code language="js"><![CDATA[{
   "attachment":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/c4139f47-a90e-4b37-aec1-1f1b3aae9e3c"
      },
      "title":"A cool image of fubar",
      "publishedTime":"2010-07-17T18:54:11.939Z",
      "publisher":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456"
         }
      },
      "mimeType":"image/x-diretto-twitpix+url",
      "external":{
         "link":{
            "rel":"self",
            "href":"http://twitpix.foo/135xa"
         }
      },
      "votes":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/c4139f47-a90e-4b37-aec1-1f1b3aae9e3c/votes"
         },
         "up":12,
         "down":2
      },
      "license":"http://creativecommons.org/licenses/by-sa/3.0/de/",
      "contributors":[
         {
            "external":{
               "name":"Alice",
               "link":null
            }
         },
         {
            "user":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/789012"
               }
            }
         }
      ],
      "creators":[
         {
            "user":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/007007"
               }
            }
         }
      ]
   }
}]]></code>
						</entity>
						<description>Another attachment with an external resource (<tt>external</tt> attribute is present and contains the hyperlink, no <tt>file</tt> attribute present). The entry has been uploaded (published) by user with id 123456, created by one external person and lists two contributors. One of them is an external person (Alice, with unknown hyperlink), the other one a registered platform user. The license is identified using a link.</description>
					</entities>					
				</response>
			</operation>

			<operation>
				<name>List all attachments of a document</name>
				<description>Returns a list of all attachments of the given document. 
				The list will only show attachments successfully uploaded. Pending uploads will not be shown until 
				the lock has been removed by the uploader upon successful submission. 
				Please note that is a non-paginated list, thus all attachments are listed in the response.</description>
				<path omitResourcePath="true">/document/<param description="document ID">doc-id</param>/attachments</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">List of attachments in response</answer>
						<answer code="404">Document not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "attachments":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachments"
      },
      "list":[
         {
            "attachment":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66"
               },
               "title":"A cool image of fubar",
               "publishedTime":"2010-07-17T18:54:11.939Z",
               "publisher":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/user/123456"
                  }
               },
               "mimeType":"image/jpeg",
               "file":{
                  "size":132456,
                  "link":{
                     "rel":"self",
                     "href":"http://storage.example.foo/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66.jpg"
                  }
               },
               "votes":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66/votes"
                  },
                  "up":12,
                  "down":2
               },
               "license":"Creative Commons Attribution-ShareAlike 3.0 Unported - Deed",
               "contributors":[

               ],
               "creators":[
                  {
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  }
               ]
            }
         },
         {
            "attachment":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/c4139f47-a90e-4b37-aec1-1f1b3aae9e3c"
               },
               "title":"A cool image of fubar",
               "publishedTime":"2010-07-17T18:54:11.939Z",
               "publisher":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/user/123456"
                  }
               },
               "mimeType":"image/x-diretto-twitpix+url",
               "external":{
                  "link":{
                     "rel":"self",
                     "href":"http://twitpix.foo/135xa"
                  }
               },
               "votes":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/c4139f47-a90e-4b37-aec1-1f1b3aae9e3c/votes"
                  },
                  "up":12,
                  "down":2
               },
               "license":"http://creativecommons.org/licenses/by-sa/3.0/de/",
               "contributors":[
                  {
                     "external":{
                        "name":"Alice",
                        "link":null
                     }
                  },
                  {
                     "user":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/user/789012"
                        }
                     }
                  }
               ],
               "creators":[
                  {
                     "user":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/user/007007"
                        }
                     }
                  }
               ]
            }
         }
      ]
   }
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>

			<operation>
				<name>Create a new attachment*</name>
				<description>Adds a new attachment to a document. Please note that this API call is not used
				for the creation of an initial attachment of a document. It can only be used for adding alternative
				submissions to a given document.</description>
				<path omitResourcePath="true">/document/<param description="document ID">doc-id</param>/attachments</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication mandatory="true"/>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "todo": ""
}]]></code>
						<description>This request will create a new attachment with a media file. It must be stored by 
						Storage API in a later step.</description>
						</entity>
						<entity>
<code language="js"><![CDATA[{
   "todo": ""
}]]></code>
						<description>However, this request adds a new external resource as an attachment. If the external resource
						is validated, the attachment creation directly succeeds in this call.</description>
						</entity>											
					</entities>
				</request>
				<response>
					<responses>
						<answer code="201">(External) attachment accepted, attachment created.</answer>
						<answer code="202">Attachment accepted, uploading credentials in response</answer>
						<answer code="400">Invalid meta data</answer>
						<answer code="404">Document not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "todo": ""
}]]></code>
						<description></description>
						</entity>
<entity>
<code language="js"><![CDATA[{
   "todo": ""
}]]></code>
						<description></description>
						</entity>						
					</entities>					
				</response>
			</operation>
			
			<operation>
				<name>Redirect to the actual attachment file</name>
				<description>Redirects the request to the raw file of the attachment. If the attachment is stored
				on the platform, the request will be redirected to the correct URI of the Storage API.
				If the attachment is of type external, the request will be redirected to the external URI. 
				</description>
				<path omitResourcePath="false">/file</path>
				<formats><format>varying</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="301">Location header contains the URI of the attachment file</answer>
						<answer code="404">Document/attachment not found</answer>
					</responses>
					<entities />
				</response>
			</operation>			

			<operation>
				<name>Confirm successful attachment upload</name>
				<description>When a client has uploaded a new attachment to the Storage API, the service will emit
				a token in the response to the upload. It is necessary to confirm the successful upload towards the Core API. 
				In order to approve the attachment upload, the client must use this token and delete a lock
				pending on the attachment resource.  
				Please note: This step is only necessary for attachments uploaded to the Storage API, it is not needed
				for external attachments.
				</description>
				<path omitResourcePath="false">/lock?token=<param description="confirmation token" >token</param></path>
				<formats><format>n/a</format></formats>
				<request>
					<method>DELETE</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">Lock removed</answer>
						<answer code="400">Superfluous confirmation</answer>
						<answer code="403">Invalid token</answer>
						<answer code="404">Document/attachment not found</answer>
					</responses>
					<entities />
				</response>
			</operation>			

		</resource>

	<!-- ============================================================================================================= 
			Document
	============================================================================================================== -->
		<resource>
			<name>Document*</name>
			<description>This resource represents a document.
			
	The following flow shows the steps involved when creating a new document including the initial attachment (not external).
	<code language="plain">
   Client         Core API Server      Storage API Server

     |                    |                   |
     |                    |                   |
     | (1) POST Metadata  |                   |
     |------------------->|                   |
     |                    |                   |
     | (2) 202 + Location |                   |
     |&lt;-------------------|                   |
     |                    |                   |
     | (3) PUT/POST Entity (signed URI)       |
     |--------------------+------------------>|
     |                    |                   |
     | (4) 201 Created + Accept Key in Body   |
     |&lt;-------------------+-------------------|
     |                    |                   |
     | (5) DELETE Lock (via Accept Key)       |
     |------------------->|                   |
     |                    |                   |
     | (6) 204            |                   |
     |&lt;-------------------|                   |
     |                    |                   |
     |                    |                   |
</code>					
			
			</description>
			<path>/document/<param description="document ID">doc-id</param></path>

			<operation>
				<name>List of all documents (forward)</name>
				<description>Forwards to a list of all documents, ordered by publishing date.</description>
				<path omitResourcePath="true">/documents</path>
				<formats><format>n/a</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No results available yet.</answer>					
						<answer code="303">Redirect to first page</answer>
					</responses>
					<entities/>					
				</response>
			</operation>
			
			<operation>
				<name>List of all documents (page)</name>
				<description>Returns a page from the list of all documents, ordered by publishing date.</description>
				<path omitResourcePath="true">/documents/cursor/<param description="the document ID used as cursor">cursor-id</param></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">List page in response</answer>
						<answer code="404">Cursor not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "page":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/documents/cursor/550e8400-e29b-11d4-a716-446655440000"
      }
   },
   "list":[
      {
         "document":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/550e8400-e29b-11d4-a716-446655440000"
            }
         }
      }
   ],
   "related":[
      {
         "link":{
            "rel":"previous",
            "href":"http://core.example.foo/v2/documents/cursor/5330edf0-a68d-11e0-8264-0800200c9a66"
         }
      },
      {
         "link":{
            "rel":"next",
            "href":"http://core.example.foo/v2/documents/cursor/8d45b5ff-c6b8-4ec3-9fd1-96704233be3e"
         }
      }
   ]
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>			
			
			<operation>
				<name>List of documents published since a specific date (forward)</name>
				<description>Forwards to a list of all documents published since a specific date, ordered by publishing date.</description>
				<path omitResourcePath="true">/documents/since/<param description="A RFC 3339 compliant date (Zulu time) to be used as split point.">split date</param></path>
				<formats><format>n/a</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="204">No results available yet.</answer>
						<answer code="303">Redirect to new page</answer>
					</responses>
					<entities/>					
				</response>
			</operation>
			
			<operation>
				<name>Get a single document (meta-data only)</name>
				<description>Returns meta-data of the document. The response includes only values directly referring to the document itself.
				There are hyperlinks for other related data.</description>
				<path omitResourcePath="false"></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Document data in response</answer>
						<answer code="204">Document exists, but is not available (i.e. creation pending)</answer>
						<answer code="404">Document not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "document":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66"
      },
      "mediaType":"image",
      "publishedTime":"2010-07-17T18:54:11.939Z",
      "publisher":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456"
         }
      },
      "title":"A cool image of fubar",
      "desc":"…",
      "comments":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comments"
         }
      },
      "tags":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tags"
         }
      },
      "attachments":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachments"
         }
      },
      "locations":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/locations"
         }
      },
      "times":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/times"
         }
      },
      "values":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/values"
         }
      },
      "documentlinks":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128/links"
         }
      }
   }
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>
			
			<operation>
				<name>Get a single document (snapshot)</name>
				<description>Returns a condensed snapshot of a document. It contains the full meta data of the document, and additionally inlined
				the complete list of tags, the initial attachment data and one entry for time and one for location origin (best votes).</description>
				<path omitResourcePath="false">/snapshot</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Document data in response</answer>
						<answer code="204">Document exists, but is not available (i.e. creation pending)</answer>
						<answer code="404">Document not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "document":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66"
      },
      "mediaType":"image",
      "publishedTime":"2010-07-17T18:54:11.939Z",
      "publisher":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/user/123456"
         }
      },
      "title":"A cool image of fubar",
      "desc":"…",
      "snapshot":{
         "attachment":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66"
            },
            "title":"A cool image of fubar",
            "publishedTime":"2010-07-17T18:54:11.939Z",
            "publisher":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/123456"
               }
            },
            "mimeType":"image/jpeg",
            "file":{
               "size":132456,
               "link":{
                  "rel":"self",
                  "href":"http://storage.example.foo/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66.jpg"
               }
            },
            "votes":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66/votes"
               },
               "up":12,
               "down":2
            },
            "license":"Creative Commons Attribution-ShareAlike 3.0 Unported - Deed",
            "contributors":[

            ],
            "creators":[
               {
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/user/123456"
                  }
               }
            ]
         },
         "location":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/location/48.39848,9.991246,100"
            },
            "position":{
               "type":"Point",
               "coordinates":[
                  9.991246,
                  48.39848
               ]
            },
            "variance":100,
            "creationTime":"2010-07-17T18:54:11.939Z",
            "creator":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/123456"
               }
            },
            "votes":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/location/48.39848,9.991246,100/votes"
               },
               "up":4,
               "down":1
            }
         },
         "time":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/time/2010-06-29T19:00:00.000Z--2010-06-29T20:00:00.000Z"
            },
            "between":{
               "after":"2010-06-29T19:00:00.000Z",
               "before":"2010-06-29T20:00:00.000Z"
            },
            "creationTime":"2010-07-17T18:54:11.939Z",
            "creator":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/123456"
               }
            },
            "votes":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/time/2010-06-29T19:15:50.000Z--2010-06-29T19:15:50.000Z/votes"
               },
               "up":4,
               "down":1
            }
         }
      },
      "comments":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comments"
         }
      },
      "tags":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tags"
         },
         "list":[
            {
               "tag":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                  },
                  "baseTag":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                     }
                  },
                  "value":"mytag",
                  "creationTime":"2010-07-17T18:54:11.939Z",
                  "creator":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/votes"
                     },
                     "up":12,
                     "down":2
                  }
               }
            }
         ]
      },
      "attachments":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachments"
         }
      },
      "locations":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/locations"
         }
      },
      "times":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/times"
         }
      },
      "values":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/values"
         }
      },
      "documentlinks":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128/links"
         }
      }
   }
}]]></code>
						</entity>
					</entities>				
				</response>
			</operation>			
			
			<operation>
				<name>Get a single document (full)</name>
				<description>Returns the complete data related the given document. All related data will be inlined, and items 
				normally paginated (such as comments) will be included as full flattened lists.				
				Please note that this is an expensive operation in terms of data to be collected for the response and also data
				to be sent over the network. Thus, please use this API call responsibly and only if you need the full data set.</description>
				<path omitResourcePath="false">/full</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities />
				</request>
				<response>
					<responses>
						<answer code="200">Document data in response</answer>
						<answer code="204">Document exists, but is not available (i.e. creation pending)</answer>
						<answer code="404">Document not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "document":{
      "link":{
         "rel":"self",
         "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66"
      },
      "mediaType":"image",
      "publishedTime":"2010-07-17T18:54:11.939Z",
      "publisher":{
         "link":{
            "rel":"self",
            "href":"http://core/v2/user/123456"
         }
      },
      "title":"A cool image of fubar",
      "desc":"…",
      "comments":{
         "link":{
            "rel":"self",
            "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comments"
         },
         "list":[
            {
               "comment":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comment/8e252710-77cf-11e0-a1f0-0800200c9a66"
                  },
                  "content":"blablabla",
                  "creationTime":"2010-07-17T18:54:11.939Z",
                  "creator":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comment/8e252710-77cf-11e0-a1f0-0800200c9a66/votes"
                     },
                     "up":12,
                     "down":2
                  }
               }
            }
         ]
      },
      "tags":{
         "link":{
            "rel":"self",
            "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tags"
         },
         "list":[
            {
               "tag":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                  },
                  "baseTag":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                     }
                  },
                  "value":"mytag",
                  "creationTime":"2010-07-17T18:54:11.939Z",
                  "creator":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/votes"
                     },
                     "up":12,
                     "down":2
                  }
               }
            }
         ]
      },
      "attachments":{
         "link":{
            "rel":"self",
            "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachments"
         },
         "list":[
            {
               "attachment":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66"
                  },
                  "title":"A cool image of fubar",
                  "publishedTime":"2010-07-17T18:54:11.939Z",
                  "publisher":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "mimeType":"image/jpeg",
                  "file":{
                     "size":132456,
                     "link":{
                        "rel":"self",
                        "href":"http://storage.example.foo/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66.jpg"
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66/votes"
                     },
                     "up":12,
                     "down":2
                  },
                  "license":"Creative Commons Attribution-ShareAlike 3.0 Unported - Deed",
                  "contributors":[

                  ],
                  "creators":[
                     {
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/user/123456"
                        }
                     }
                  ]
               }
            },
            {
               "attachment":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/c4139f47-a90e-4b37-aec1-1f1b3aae9e3c"
                  },
                  "title":"A cool image of fubar",
                  "publishedTime":"2010-07-17T18:54:11.939Z",
                  "publisher":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "mimeType":"image/x-diretto-twitpix+url",
                  "external":{
                     "link":{
                        "rel":"self",
                        "href":"http://twitpix.foo/135xa"
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/c4139f47-a90e-4b37-aec1-1f1b3aae9e3c/votes"
                     },
                     "up":12,
                     "down":2
                  },
                  "license":"http://creativecommons.org/licenses/by-sa/3.0/de/",
                  "contributors":[
                     {
                        "external":{
                           "name":"Alice",
                           "link":null
                        }
                     },
                     {
                        "user":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/user/789012"
                           }
                        }
                     }
                  ],
                  "creators":[
                     {
                        "user":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/user/007007"
                           }
                        }
                     }
                  ]
               }
            }
         ]
      },
      "locations":{
         "link":{
            "rel":"self",
            "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/locations"
         },
         "list":[
            {
               "location":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/location/48.39848,9.991246,100"
                  },
                  "position":{
                     "type":"Point",
                     "coordinates":[
                        9.991246,
                        48.39848
                     ]
                  },
                  "variance":100,
                  "creationTime":"2010-07-17T18:54:11.939Z",
                  "creator":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/location/48.39848,9.991246,100/votes"
                     },
                     "up":4,
                     "down":1
                  }
               }
            }
         ]
      },
      "times":{
         "link":{
            "rel":"self",
            "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/times"
         },
         "list":[
            {
               "time":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/time/2010-06-29T19:00:00.000Z--2010-06-29T20:00:00.000Z"
                  },
                  "between":{
                     "after":"2010-06-29T19:00:00.000Z",
                     "before":"2010-06-29T20:00:00.000Z"
                  },
                  "creationTime":"2010-07-17T18:54:11.939Z",
                  "creator":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/time/2010-06-29T19:15:50.000Z--2010-06-29T19:15:50.000Z/votes"
                     },
                     "up":4,
                     "down":1
                  }
               }
            }
         ]
      },
      "values":{
         "link":{
            "rel":"self",
            "href":"http://core.example.foo/v2/document/values"
         },
         "list":[
            {
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/value/7815696ecbf1c96e6894b779456d330e/test"
               },
               "key":{
                  "namespace":"7815696ecbf1c96e6894b779456d330e",
                  "field":"test"
               },
               "value":"VGhpcyBpcyBhbiBleGFtcGxl"
            }
         ]
      },
      "documentlinks":{
         "link":{
            "rel":"self",
            "href":"http://core/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128/links"
         },
         "in":[
            {
               "documentlink":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66"
                  },
                  "title":"blabla",
                  "description":"asdasd",
                  "creationTime":"2010-07-17T18:54:11.939Z",
                  "creator":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "source":{
                     "document":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66"
                        }
                     }
                  },
                  "destination":{
                     "document":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128"
                        }
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/votes"
                     },
                     "up":12,
                     "down":2
                  },
                  "tags":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tags"
                     },
                     "list":[
                        {
                           "tag":{
                              "link":{
                                 "rel":"self",
                                 "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                              },
                              "baseTag":{
                                 "link":{
                                    "rel":"self",
                                    "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                                 }
                              },
                              "value":"mytag",
                              "creationTime":"2010-07-17T18:54:11.939Z",
                              "creator":{
                                 "link":{
                                    "rel":"self",
                                    "href":"http://core.example.foo/v2/user/123456"
                                 }
                              },
                              "votes":{
                                 "link":{
                                    "rel":"self",
                                    "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/votes"
                                 },
                                 "up":12,
                                 "down":2
                              }
                           }
                        }
                     ]
                  }
               }
            }
         ],
         "out":[

         ]
      }
   }
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>			
			
			<operation>
				<name>Fetch the meta-data of multiple documents (batch request)</name>
				<description>Given a list of document URIs, it returns a list containing details for each document (meta data type).</description>
				<path omitResourcePath="false">/full</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication mandatory="true"/>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "documents":[
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66",
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-00000invalid"
   ]
}]]></code>
						</entity>
					</entities>
				</request>
				<response>
					<responses>
						<answer code="200">Results in response body. Note that tasks may still have raised errors (i.e. when not found).</answer>
						<answer code="400">Invalid query or too many items requested.</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "results":{
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-00000invalid":{
         "error":{
            "message":"Not found"
         }
      },
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66":{
         "document":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66"
            },
            "mediaType":"image",
            "publishedTime":"2010-07-17T18:54:11.939Z",
            "publisher":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/123456"
               }
            },
            "title":"A cool image of fubar",
            "desc":"…",
            "comments":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comments"
               }
            },
            "tags":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tags"
               }
            },
            "attachments":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachments"
               }
            },
            "locations":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/locations"
               }
            },
            "times":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/times"
               }
            },
            "values":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128/values"
               }
            },
            "documentlinks":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128/links"
               }
            }
         }
      }
   }
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>							

			<operation>
				<name>Fetch snapshots of multiple documents (batch request)</name>
				<description>Given a list of document URIs, it returns a list containing details for each document (meta data type).
				</description>
				<path omitResourcePath="false">/full</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication mandatory="true"/>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "documents":[
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66",
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-00000invalid"
   ]
}]]></code>
						</entity>
					</entities>
				</request>
				<response>
					<responses>
						<answer code="200">Results in response body. Note that tasks may still have raised errors (i.e. when not found).</answer>
						<answer code="400">Invalid query or too many items requested.</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "results":{
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-00000invalid":{
         "error":{
            "message":"Not found"
         }
      },
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66":{
         "document":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66"
            },
            "mediaType":"image",
            "publishedTime":"2010-07-17T18:54:11.939Z",
            "publisher":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/user/123456"
               }
            },
            "title":"A cool image of fubar",
            "desc":"…",
            "snapshot":{
               "attachment":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66"
                  },
                  "title":"A cool image of fubar",
                  "publishedTime":"2010-07-17T18:54:11.939Z",
                  "publisher":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "mimeType":"image/jpeg",
                  "file":{
                     "size":132456,
                     "link":{
                        "rel":"self",
                        "href":"http://storage.example.foo/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66.jpg"
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66/votes"
                     },
                     "up":12,
                     "down":2
                  },
                  "license":"Creative Commons Attribution-ShareAlike 3.0 Unported - Deed",
                  "contributors":[

                  ],
                  "creators":[
                     {
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/user/123456"
                        }
                     }
                  ]
               },
               "location":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/location/48.39848,9.991246,100"
                  },
                  "position":{
                     "type":"Point",
                     "coordinates":[
                        9.991246,
                        48.39848
                     ]
                  },
                  "variance":100,
                  "creationTime":"2010-07-17T18:54:11.939Z",
                  "creator":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/location/48.39848,9.991246,100/votes"
                     },
                     "up":4,
                     "down":1
                  }
               },
               "time":{
                  "link":{
                     "rel":"self",
                     "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/time/2010-06-29T19:00:00.000Z--2010-06-29T20:00:00.000Z"
                  },
                  "between":{
                     "after":"2010-06-29T19:00:00.000Z",
                     "before":"2010-06-29T20:00:00.000Z"
                  },
                  "creationTime":"2010-07-17T18:54:11.939Z",
                  "creator":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/user/123456"
                     }
                  },
                  "votes":{
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/time/2010-06-29T19:15:50.000Z--2010-06-29T19:15:50.000Z/votes"
                     },
                     "up":4,
                     "down":1
                  }
               }
            },
            "comments":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comments"
               }
            },
            "tags":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tags"
               },
               "list":[
                  {
                     "tag":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                        },
                        "baseTag":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                           }
                        },
                        "value":"mytag",
                        "creationTime":"2010-07-17T18:54:11.939Z",
                        "creator":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/user/123456"
                           }
                        },
                        "votes":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/votes"
                           },
                           "up":12,
                           "down":2
                        }
                     }
                  }
               ]
            },
            "attachments":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachments"
               }
            },
            "locations":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/locations"
               }
            },
            "times":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/times"
               }
            },
            "values":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128/values"
               }
            },
            "documentlinks":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128/links"
               }
            }
         }
      }
   }
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>							

			<operation>
				<name>Fetch multiple full documents (batch request)*</name>
				<description>Given a list of document URIs, it returns a list containing details for each document (full type).
				Please note that this is an expensive operation in terms of data to be collected for the response and also data
				to be sent over the network. Thus, please use this API call responsibly and prefer the other document request types,
				if appropriate.				
				</description>
				<path omitResourcePath="false">/full</path>
				<formats><format>application/json</format></formats>
				<request>
					<method>POST</method>
					<authentication mandatory="true"/>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "documents":[
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66",
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-00000invalid"
   ]
}]]></code>
						</entity>
					</entities>
				</request>
				<response>
					<responses>
						<answer code="200">Results in response body. Note that tasks may still have raised errors (i.e. when not found).</answer>
						<answer code="400">Invalid query or too many items requested.</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "results":{
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-00000invalid":{
         "error":{
            "message":"Not found"
         }
      },
      "http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66":{
         "document":{
            "link":{
               "rel":"self",
               "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66"
            },
            "mediaType":"image",
            "publishedTime":"2010-07-17T18:54:11.939Z",
            "publisher":{
               "link":{
                  "rel":"self",
                  "href":"http://core/v2/user/123456"
               }
            },
            "title":"A cool image of fubar",
            "desc":"…",
            "comments":{
               "link":{
                  "rel":"self",
                  "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comments"
               },
               "list":[
                  {
                     "comment":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comment/8e252710-77cf-11e0-a1f0-0800200c9a66"
                        },
                        "content":"blablabla",
                        "creationTime":"2010-07-17T18:54:11.939Z",
                        "creator":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/user/123456"
                           }
                        },
                        "votes":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/comment/8e252710-77cf-11e0-a1f0-0800200c9a66/votes"
                           },
                           "up":12,
                           "down":2
                        }
                     }
                  }
               ]
            },
            "tags":{
               "link":{
                  "rel":"self",
                  "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tags"
               },
               "list":[
                  {
                     "tag":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                        },
                        "baseTag":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                           }
                        },
                        "value":"mytag",
                        "creationTime":"2010-07-17T18:54:11.939Z",
                        "creator":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/user/123456"
                           }
                        },
                        "votes":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/votes"
                           },
                           "up":12,
                           "down":2
                        }
                     }
                  }
               ]
            },
            "attachments":{
               "link":{
                  "rel":"self",
                  "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachments"
               },
               "list":[
                  {
                     "attachment":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66"
                        },
                        "title":"A cool image of fubar",
                        "publishedTime":"2010-07-17T18:54:11.939Z",
                        "publisher":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/user/123456"
                           }
                        },
                        "mimeType":"image/jpeg",
                        "file":{
                           "size":132456,
                           "link":{
                              "rel":"self",
                              "href":"http://storage.example.foo/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66.jpg"
                           }
                        },
                        "votes":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/eafbad70-7972-11e0-a1f0-0800200c9a66/votes"
                           },
                           "up":12,
                           "down":2
                        },
                        "license":"Creative Commons Attribution-ShareAlike 3.0 Unported - Deed",
                        "contributors":[

                        ],
                        "creators":[
                           {
                              "link":{
                                 "rel":"self",
                                 "href":"http://core.example.foo/v2/user/123456"
                              }
                           }
                        ]
                     }
                  },
                  {
                     "attachment":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/c4139f47-a90e-4b37-aec1-1f1b3aae9e3c"
                        },
                        "title":"A cool image of fubar",
                        "publishedTime":"2010-07-17T18:54:11.939Z",
                        "publisher":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/user/123456"
                           }
                        },
                        "mimeType":"image/x-diretto-twitpix+url",
                        "external":{
                           "link":{
                              "rel":"self",
                              "href":"http://twitpix.foo/135xa"
                           }
                        },
                        "votes":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/attachment/c4139f47-a90e-4b37-aec1-1f1b3aae9e3c/votes"
                           },
                           "up":12,
                           "down":2
                        },
                        "license":"http://creativecommons.org/licenses/by-sa/3.0/de/",
                        "contributors":[
                           {
                              "external":{
                                 "name":"Alice",
                                 "link":null
                              }
                           },
                           {
                              "user":{
                                 "link":{
                                    "rel":"self",
                                    "href":"http://core.example.foo/v2/user/789012"
                                 }
                              }
                           }
                        ],
                        "creators":[
                           {
                              "user":{
                                 "link":{
                                    "rel":"self",
                                    "href":"http://core.example.foo/v2/user/007007"
                                 }
                              }
                           }
                        ]
                     }
                  }
               ]
            },
            "locations":{
               "link":{
                  "rel":"self",
                  "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/locations"
               },
               "list":[
                  {
                     "location":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/location/48.39848,9.991246,100"
                        },
                        "position":{
                           "type":"Point",
                           "coordinates":[
                              9.991246,
                              48.39848
                           ]
                        },
                        "variance":100,
                        "creationTime":"2010-07-17T18:54:11.939Z",
                        "creator":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/user/123456"
                           }
                        },
                        "votes":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/location/48.39848,9.991246,100/votes"
                           },
                           "up":4,
                           "down":1
                        }
                     }
                  }
               ]
            },
            "times":{
               "link":{
                  "rel":"self",
                  "href":"http://core/v2/document/eafbad70-7972-11e0-a1f0-0800200c9a66/times"
               },
               "list":[
                  {
                     "time":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/time/2010-06-29T19:00:00.000Z--2010-06-29T20:00:00.000Z"
                        },
                        "between":{
                           "after":"2010-06-29T19:00:00.000Z",
                           "before":"2010-06-29T20:00:00.000Z"
                        },
                        "creationTime":"2010-07-17T18:54:11.939Z",
                        "creator":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/user/123456"
                           }
                        },
                        "votes":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/time/2010-06-29T19:15:50.000Z--2010-06-29T19:15:50.000Z/votes"
                           },
                           "up":4,
                           "down":1
                        }
                     }
                  }
               ]
            },
            "values":{
               "link":{
                  "rel":"self",
                  "href":"http://core.example.foo/v2/document/values"
               },
               "list":[
                  {
                     "link":{
                        "rel":"self",
                        "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66/value/7815696ecbf1c96e6894b779456d330e/test"
                     },
                     "key":{
                        "namespace":"7815696ecbf1c96e6894b779456d330e",
                        "field":"test"
                     },
                     "value":"VGhpcyBpcyBhbiBleGFtcGxl"
                  }
               ]
            },
            "documentlinks":{
               "link":{
                  "rel":"self",
                  "href":"http://core/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128/links"
               },
               "in":[
                  {
                     "documentlink":{
                        "link":{
                           "rel":"self",
                           "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66"
                        },
                        "title":"blabla",
                        "description":"asdasd",
                        "creationTime":"2010-07-17T18:54:11.939Z",
                        "creator":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/user/123456"
                           }
                        },
                        "source":{
                           "document":{
                              "link":{
                                 "rel":"self",
                                 "href":"http://core.example.foo/v2/document/32b8c320-a28e-11e0-8264-0800200c9a66"
                              }
                           }
                        },
                        "destination":{
                           "document":{
                              "link":{
                                 "rel":"self",
                                 "href":"http://core.example.foo/v2/document/c0e33672-79ac-4d16-b097-5c3f68a66128"
                              }
                           }
                        },
                        "votes":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/votes"
                           },
                           "up":12,
                           "down":2
                        },
                        "tags":{
                           "link":{
                              "rel":"self",
                              "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tags"
                           },
                           "list":[
                              {
                                 "tag":{
                                    "link":{
                                       "rel":"self",
                                       "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                                    },
                                    "baseTag":{
                                       "link":{
                                          "rel":"self",
                                          "href":"http://core.example.foo/v2/tag/ef7987f2bd22f4a8cf236c83a57c1f6b"
                                       }
                                    },
                                    "value":"mytag",
                                    "creationTime":"2010-07-17T18:54:11.939Z",
                                    "creator":{
                                       "link":{
                                          "rel":"self",
                                          "href":"http://core.example.foo/v2/user/123456"
                                       }
                                    },
                                    "votes":{
                                       "link":{
                                          "rel":"self",
                                          "href":"http://core.example.foo/v2/link/1ec99ce0-a28e-11e0-8264-0800200c9a66/tag/ef7987f2bd22f4a8cf236c83a57c1f6b/votes"
                                       },
                                       "up":12,
                                       "down":2
                                    }
                                 }
                              }
                           ]
                        }
                     }
                  }
               ],
               "out":[

               ]
            }
         }
      }
   }
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>							

			<operation>
				<name>Create a new document*</name>
				<description>.</description>
				<path omitResourcePath="true"></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>PUT</method>
					<authentication mandatory="true"/>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "todo":null
}]]></code>
						</entity>
					</entities>
				</request>
				<response>
					<responses>
						<answer code="200"></answer>
					</responses>
					<entities/>					
				</response>
			</operation>							

			<operation>
				<name>List of documents created by an user (forward)</name>
				<description>Forwards to a list of documents that this user has published, ordered by publishing date.</description>
				<path omitResourcePath="true"></path>
				<formats><format>n/a</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities/>					
				</request>
				<response>
					<responses>
						<answer code="204">No results available yet.</answer>
						<answer code="303">Forward to the first page.</answer>
						<answer code="404">User not found</answer>
					</responses>
					<entities/>					
				</response>
			</operation>							

			<operation>
				<name>List of documents created by an user (page)</name>
				<description>Returns a page from the list of documents that this user has published, ordered by publishing date.</description>
				<path omitResourcePath="true"></path>
				<formats><format>application/json</format></formats>
				<request>
					<method>GET</method>
					<authentication mandatory="true"/>
					<entities/>					
				</request>
				<response>
					<responses>
						<answer code="200">List page in response</answer>
						<answer code="404">User/Cursor not found</answer>
					</responses>
					<entities>
						<entity>
<code language="js"><![CDATA[{
   "page":{
      "link":{
         "rel":"self",
         "href":"http://core.example.foo/v2/user/asdasd/documents/cursor/550e8400-e29b-11d4-a716-446655440000"
      }
   },
   "list":[
      {
         "document":{
            "link":{
               "rel":"self",
               "href":"http://core.example.foo/v2/document/550e8400-e29b-11d4-a716-446655440000"
            }
         }
      }
   ],
   "related":[
      {
         "link":{
            "rel":"previous",
            "href":"http://core.example.foo/v2/user/asdasd/documents/cursor/5330edf0-a68d-11e0-8264-0800200c9a66"
         }
      },
      {
         "link":{
            "rel":"next",
            "href":"http://core.example.foo/v2/user/asdasd/documents/cursor/8d45b5ff-c6b8-4ec3-9fd1-96704233be3e"
         }
      }
   ]
}]]></code>
						</entity>
					</entities>					
				</response>
			</operation>							

		</resource>
				
	</resources>
</api>